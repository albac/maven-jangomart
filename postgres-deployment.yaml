apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: pg-initdb
          configMap:
            name: pg-initdb-config
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: pg-initdb
              mountPath: /docker-entrypoint-initdb.d
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: postgres-host
            - name: POSTGRES_DBNAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: postgres-dbname
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-initdb-config
data:
  initdb.sql: |
    CREATE TABLE employees (id SERIAL, name text, title text, department text CONSTRAINT employees_pkey PRIMARY KEY (id));
    INSERT INTO employees(name, title) VALUES
    ('John Doe', 'Head of Operations', 'engineering'),
    ('Alfredo B', 'DevOps Architect', 'engineering'),
    ('Richarson Andre', 'Marketing Guru', 'marketing');
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
